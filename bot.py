import time
import json
import requests
import os
from flask import Flask, request

# ====== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ======
def MainProtokol(s, ts='–ó–∞–ø–∏—Å—å'):
    dt = time.strftime('%d.%m.%Y %H:%M:') + '00'
    with open('log.txt', 'a') as f:
        f.write(f"{dt};{ts};{s}\n")

# ====== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ======
TOKEN = os.getenv("API_TOKEN")  # Telegram —Ç–æ–∫–µ–Ω
ADMIN_ID = os.getenv("ADMIN_ID")  # ID –∞–¥–º–∏–Ω–∞
WEBHOOK_URL = f"https://telegram-bot-1-g3bw.onrender.com/webhook/{TOKEN}"

# ====== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ ======
MAIN_MENU = ["üì¢ –ü—Ä–æ –Ω–∞—Å", "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏", "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É"]

def get_inline_buttons():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫"""
    return json.dumps({
        "inline_keyboard": [
            [{"text": "üì¢ –ü—Ä–æ –Ω–∞—Å", "callback_data": "about"}],
            [{"text": "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏", "callback_data": "schedule"}],
            [{"text": "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É", "callback_data": "write_admin"}]
        ]
    })

# ====== –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ======
def send_message(chat_id, text, reply_markup=None):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {'chat_id': chat_id, 'text': text}
    if reply_markup:
        payload['reply_markup'] = reply_markup
    resp = requests.post(url, data=payload)
    if not resp.ok:
        raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {resp.text}")
    return resp

def send_media(chat_id, media_type, file_id, caption=""):
    url_map = {
        'photo': f'https://api.telegram.org/bot{TOKEN}/sendPhoto',
        'video': f'https://api.telegram.org/bot{TOKEN}/sendVideo',
        'document': f'https://api.telegram.org/bot{TOKEN}/sendDocument',
        'voice': f'https://api.telegram.org/bot{TOKEN}/sendVoice',
    }
    if media_type not in url_map:
        return
    data = {'chat_id': chat_id, 'caption': caption}
    files = {media_type: file_id} if media_type in ['photo','video','document','voice'] else None
    requests.post(url_map[media_type], data=data)

# ====== –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook ======
def application(env, start_response):
    try:
        path = env.get('PATH_INFO', '')
        if path.lower() == '/webhook/' + TOKEN:
            wsgi_input = env['wsgi.input'].read()
            data_raw = wsgi_input.decode('utf-8').replace('\n',' ')
            update = json.loads(data_raw)

            message = update.get('message')
            callback = update.get('callback_query')

            if message:
                chat_id = message['chat']['id']
                text = message.get('text', '')
                first_name = message['from'].get('first_name','–ë–µ–∑ –∏–º–µ–Ω–∏')

                if text == '/start':
                    send_message(chat_id, "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É üëá", reply_markup=get_inline_buttons())
                elif text in MAIN_MENU:
                    if text == "üì¢ –ü—Ä–æ –Ω–∞—Å":
                        send_message(chat_id, "–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—ñ–≤. –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://www.instagram.com/p/DOEpwuEiLuC/?igsh=MTdjY3l4Mmt1d2VoeQ==")
                    elif text == "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏":
                        send_message(chat_id, "–ù–∞—à –±–æ—Ç –ø—Ä–∏–π–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 25/8! –ê–¥–º—ñ–Ω –º–æ–∂–µ —Å–ø–∞—Ç–∏, –∞–ª–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å üòâ")
                    elif text == "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É":
                        send_message(chat_id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ/–¥–æ–∫—É–º–µ–Ω—Ç):")
                else:
                    # –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤—Å–µ –∞–¥–º–∏–Ω—É
                    admin_msg = f"üì© –î–æ–ø–∏—Å –≤—ñ–¥ {first_name}\nID: {chat_id}\n–¢–µ–∫—Å—Ç: {text}"
                    send_message(ADMIN_ID, admin_msg)
                    if 'photo' in message:
                        send_media(ADMIN_ID,'photo',message['photo'][-1]['file_id'],caption=f"–§–æ—Ç–æ –æ—Ç {first_name}")
                    if 'video' in message:
                        send_media(ADMIN_ID,'video',message['video']['file_id'],caption=f"–í–∏–¥–µ–æ –æ—Ç {first_name}")
                    if 'document' in message:
                        send_media(ADMIN_ID,'document',message['document']['file_id'],caption=f"–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç {first_name}")
                    if 'voice' in message:
                        send_media(ADMIN_ID,'voice',message['voice']['file_id'],caption=f"–ì–æ–ª–æ—Å–æ–≤–æ–µ –æ—Ç {first_name}")
                    send_message(chat_id, "‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É!")

            elif callback:
                data = callback['data']
                chat_id = callback['from']['id']
                if data == 'about':
                    send_message(chat_id, "–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—ñ–≤. –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://www.instagram.com/p/DOEpwuEiLuC/?igsh=MTdjY3l4Mmt1d2VoeQ==")
                elif data == 'schedule':
                    send_message(chat_id, "–ù–∞—à –±–æ—Ç –ø—Ä–∏–π–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 25/8! –ê–¥–º—ñ–Ω –º–æ–∂–µ —Å–ø–∞—Ç–∏, –∞–ª–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å üòâ")
                elif data == 'write_admin':
                    send_message(chat_id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ/–¥–æ–∫—É–º–µ–Ω—Ç):")

        elif path == '/':
            MainProtokol('–∫—Ç–æ-—Ç–æ –ø—Ä–æ—Å—Ç–æ –∑–∞—à–µ–ª –Ω–∞ —Å–∞–π—Ç')
        else:
            raise ValueError(f"–í—ã–∑–æ–≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ URL :: {path}")

        start_response('200 OK', [('Content-Type','text/html')])
        return [b'']

    except Exception as e:
        MainProtokol(str(e),'–û—à–∏–±–∫–∞')
        start_response('200 OK', [('Content-Type','text/html')])
        return [str(e).encode('utf-8')]


# ====== Flask –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ ======
app = Flask(__name__)

@app.route(f'/webhook/{TOKEN}', methods=['POST'])
def webhook():
    return application(request.environ, lambda status, headers: None)

@app.route('/')
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

