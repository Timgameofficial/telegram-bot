import os
import time
import json
import requests
from flask import Flask, request

# ====== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ======
def MainProtokol(s, ts='–ó–∞–ø–∏—Å—å'):
    dt = time.strftime('%d.%m.%Y %H:%M:') + '00'
    with open('log.txt', 'a') as f:
        f.write(f"{dt};{ts};{s}\n")

# ====== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ======
TOKEN = os.getenv("API_TOKEN")  # Telegram —Ç–æ–∫–µ–Ω
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))  # ID –∞–¥–º–∏–Ω–∞
WEBHOOK_URL = f"https://telegram-bot-1-g3bw.onrender.com/webhook/{TOKEN}"

# ====== –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫ ======
try:
    r = requests.get(f"https://api.telegram.org/bot{TOKEN}/setWebhook?url={WEBHOOK_URL}")
    if r.ok:
        print("Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    else:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", r.text)
except Exception as e:
    print("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook:", e)

# ====== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∫–Ω–æ–ø–∫–∏ ======
MAIN_MENU = ["üì¢ –ü—Ä–æ –Ω–∞—Å", "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏", "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É"]

def get_inline_buttons():
    return {
        "inline_keyboard": [
            [{"text": "üì¢ –ü—Ä–æ –Ω–∞—Å", "callback_data": "about"}],
            [{"text": "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏", "callback_data": "schedule"}],
            [{"text": "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É", "callback_data": "write_admin"}]
        ]
    }

# ====== –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ======
def send_message(chat_id, text, reply_markup=None):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {'chat_id': chat_id, 'text': text}
    if reply_markup:
        payload['reply_markup'] = json.dumps(reply_markup)  # –≤–∞–∂–Ω–æ: JSON string
    resp = requests.post(url, data=payload)
    if not resp.ok:
        raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {resp.text}")
    return resp

# ====== –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ ======
waiting_for_admin = {}  # {admin_id: user_id}

# ====== Flask ======
app = Flask(__name__)

@app.route(f"/webhook/{TOKEN}", methods=["POST"])
def webhook():
    try:
        data_raw = request.get_data().decode('utf-8')
        update = json.loads(data_raw)

        # ==== Callback –∫–Ω–æ–ø–∫–∏ ====
        if 'callback_query' in update:
            call = update['callback_query']
            chat_id = call['from']['id']
            data = call['data']

            if chat_id != ADMIN_ID:
                send_message(chat_id, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏.")
                return "ok", 200

            if data.startswith("reply_"):
                user_id = int(data.split("_")[1])
                waiting_for_admin[ADMIN_ID] = user_id
                send_message(ADMIN_ID, f"‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
            elif data == "about":
                send_message(chat_id, "–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—ñ–≤. –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://www.instagram.com/p/DOEpwuEiLuC/?igsh=MTdjY3l4Mmt1d2VoeQ==")
            elif data == "schedule":
                send_message(chat_id, "–ù–∞—à –±–æ—Ç –ø—Ä–∏–π–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 25/8! –ê–¥–º—ñ–Ω –º–æ–∂–µ —Å–ø–∞—Ç–∏, –∞–ª–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å üòâ")
            elif data == "write_admin":
                send_message(chat_id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç):")
            return "ok", 200

        # ==== –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ====
        if 'message' in update:
            message = update['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            first_name = message['from'].get('first_name', '–ë–µ–∑ –∏–º–µ–Ω–∏')

            # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if message['from']['id'] == ADMIN_ID and ADMIN_ID in waiting_for_admin:
                user_id = waiting_for_admin.pop(ADMIN_ID)
                send_message(user_id, f"üí¨ –ê–¥–º–∏–Ω:\n{text}")
                send_message(ADMIN_ID, f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
                return "ok", 200

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫
            if text == '/start':
                send_message(chat_id, "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é üëá", reply_markup=get_inline_buttons())
            elif text in MAIN_MENU:
                if text == "üì¢ –ü—Ä–æ –Ω–∞—Å":
                    send_message(chat_id, "–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—ñ–≤. –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://www.instagram.com/p/DOEpwuEiLuC/?igsh=MTdjY3l4Mmt1d2VoeQ==")
                elif text == "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏":
                    send_message(chat_id, "–ù–∞—à –±–æ—Ç –ø—Ä–∏–π–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 25/8! –ê–¥–º—ñ–Ω –º–æ–∂–µ —Å–ø–∞—Ç–∏, –∞–ª–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å üòâ")
                elif text == "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É":
                    send_message(chat_id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç):")
            else:
                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω—É –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                admin_msg = f"üì© –î–æ–ø–∏—Å –≤—ñ–¥ {first_name}\nID: {chat_id}\n–¢–µ–∫—Å—Ç: {text}"
                send_message(ADMIN_ID, admin_msg)
                send_message(chat_id, "‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É!")

        return "ok", 200

    except Exception as e:
        MainProtokol(str(e), '–û—à–∏–±–∫–∞')
        return str(e), 200

# ====== –ó–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ======
@app.route('/', methods=['GET'])
def index():
    MainProtokol('–ö—Ç–æ-—Ç–æ –∑–∞—à–µ–ª –Ω–∞ —Å–∞–π—Ç')
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç", 200
