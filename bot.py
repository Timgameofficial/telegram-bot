import os
import logging
from flask import Flask, request
import telebot
from telebot import types

# ====== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ======
API_TOKEN = os.getenv("API_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –ü—É–±–ª–∏—á–Ω—ã–π URL Render

bot = telebot.TeleBot(API_TOKEN, parse_mode="HTML")
app = Flask(__name__)

logging.basicConfig(level=logging.INFO)

# ====== –•—Ä–∞–Ω–∏–ª–∏—â–∞ ======
waiting_for_admin = {}  # {admin_id: user_id}

# ====== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ======
def get_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üì¢ –ü—Ä–æ –Ω–∞—Å", "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏")
    markup.add("üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É")
    return markup

# ====== –•–µ–Ω–¥–ª–µ—Ä—ã –±–æ—Ç–∞ ======
@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –≤ –º–µ–Ω—é üëá", reply_markup=get_main_menu())

@bot.message_handler(func=lambda msg: msg.text == "üì¢ –ü—Ä–æ –Ω–∞—Å")
def about_company(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üè† –î–æ–¥–æ–º—É")
    bot.send_message(
        message.chat.id,
        "–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—ñ–≤. –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://www.instagram.com/p/DOEpwuEiLuC/",
        reply_markup=markup
    )

@bot.message_handler(func=lambda msg: msg.text == "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏")
def quick_answer(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üè† –î–æ–¥–æ–º—É")
    bot.send_message(
        message.chat.id,
        "–ù–∞—à –±–æ—Ç –ø—Ä–∏–π–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 25/8! –ê–¥–º—ñ–Ω –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å üòâ",
        reply_markup=markup
    )

@bot.message_handler(func=lambda msg: msg.text == "üè† –î–æ–¥–æ–º—É")
def go_home(message):
    bot.send_message(message.chat.id, "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é üëá", reply_markup=get_main_menu())

# ====== –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –∞–¥–º–∏–Ω—É ======
@bot.message_handler(func=lambda msg: msg.text == "üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É")
def write_admin(message):
    bot.send_message(message.chat.id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É:")
    bot.register_next_step_handler(message, forward_to_admin)

def forward_to_admin(message):
    user_id = message.from_user.id
    name = message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    username = f"@{message.from_user.username}" if message.from_user.username else "‚Äî"
    caption = f"üì© –î–æ–ø–∏—Å –≤—ñ–¥ {name}\nID: <code>{user_id}</code>\nUsername: {username}"

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("‚úâÔ∏è –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏", callback_data=f"reply_{user_id}"))

    try:
        if message.photo:
            bot.send_photo(ADMIN_ID, message.photo[-1].file_id, caption=caption, reply_markup=markup)
        elif message.video:
            bot.send_video(ADMIN_ID, message.video.file_id, caption=caption, reply_markup=markup)
        elif message.document:
            bot.send_document(ADMIN_ID, message.document.file_id, caption=caption, reply_markup=markup)
        elif message.voice:
            bot.send_voice(ADMIN_ID, message.voice.file_id, caption=caption, reply_markup=markup)
        else:
            bot.send_message(ADMIN_ID, f"{caption}\n\n{message.text or ''}", reply_markup=markup)

        bot.send_message(user_id, "‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∞–¥–º—ñ–Ω—É!")
    except Exception:
        logging.exception(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –∞–¥–º—ñ–Ω—É(user_id={user_id})")
        bot.send_message(user_id, "‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

# ====== –ê–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç ======
@bot.callback_query_handler(func=lambda call: call.data.startswith("reply_"))
def admin_reply(call):
    if call.from_user.id != ADMIN_ID:
        return
    user_id = int(call.data.split("_")[1])
    waiting_for_admin[ADMIN_ID] = user_id
    bot.send_message(ADMIN_ID, f"‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}:")

@bot.message_handler(func=lambda msg: msg.from_user.id == ADMIN_ID)
def send_admin_reply(message):
    if ADMIN_ID not in waiting_for_admin:
        return
    user_id = waiting_for_admin.pop(ADMIN_ID)
    try:
        if message.photo:
            bot.send_photo(user_id, message.photo[-1].file_id, caption=f"üí¨ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä:\n{message.caption or ''}")
        elif message.video:
            bot.send_video(user_id, message.video.file_id, caption=f"üí¨ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä:\n{message.caption or ''}")
        elif message.document:
            bot.send_document(user_id, message.document.file_id, caption=f"üí¨ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä:\n{message.caption or ''}")
        elif message.voice:
            bot.send_voice(user_id, message.voice.file_id, caption="üí¨ –ì–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        else:
            bot.send_message(user_id, f"üí¨ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä:\n{message.text or ''}")

        bot.send_message(ADMIN_ID, f"‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
    except Exception:
        logging.exception(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        bot.send_message(ADMIN_ID, f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")

# ====== Webhook endpoint ======
@app.route(f"/webhook/{API_TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

# ====== –ó–∞–ø—É—Å–∫ Flask –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ ======
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"{WEBHOOK_URL}/webhook/{API_TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
